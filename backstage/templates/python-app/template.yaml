apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python-app-template
  title: Simple Python App Template
  description: Scaffold a new Python app and publish to GitHub
spec:
  owner: team-a
  type: service

  parameters:
    - title: GitHub Repository Details
      required:
        - repoName
        - description
        - owner
      properties:
        repoName:
          title: Repository Name
          type: string
        description:
          title: Description
          type: string
        owner:
          title: GitHub Owner (user or org)
          type: string
        visibility:
          title: Repository Visibility
          type: string
          enum: [public, private]
          default: private

    - title: Choose a location
      description: |
        This section will ask for details about the Owner and Repository name which will then be used
        to create a repository in that location using your GitHub credentials.
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Enter an Owner and Repository Name
          description: |
            The Owner should be your GitHub username. The Repository name should be a name that is not one that exists already in your GitHub account.
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN # pragma: allowlist secret
              additionalScopes:
                github:
                  - workflow
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetch base
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: .
        values:
          name: ${{ parameters.repoName }}
          description: ${{ parameters.description }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        repoUrl: github.com/${{ parameters.owner }}/${{ parameters.repoName }}
        description: ${{ parameters.description }}
        repoVisibility: ${{ parameters.visibility }}

    - id: register
      name: Register in Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in Backstage
        icon: catalog
        url: ${{ steps['register'].output.catalogItemUrl }}
