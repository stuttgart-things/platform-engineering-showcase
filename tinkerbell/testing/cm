apiVersion: v1
data:
  entrypoint.sh: "#!/usr/bin/env bash\n# This script is designed to download a cloud
    image file (.img) and then convert it to a .raw.gz file.\n# This is purpose built
    so non-raw cloud image files can be used with the \"image2disk\" action.\n# See
    https://artifacthub.io/packages/tbaction/tinkerbell-community/image2disk.\nset
    -euxo pipefail\nif ! which pigz qemu-img &>/dev/null; then\n\tapk add --update
    pigz qemu-img\nfi\nimage_url=$1\nfile=$2/${image_url##*/}\nfile=${file%.*}.raw.gz\nif
    [[ ! -f \"$file\" ]]; then\n\twget \"$image_url\" -O image.img\n\tqemu-img convert
    -O raw image.img image.raw\n\tpigz <image.raw >\"$file\"\n\trm -f image.img image.raw\nfi"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"entrypoint.sh":"#!/usr/bin/env bash\n# This script is designed to download a cloud image file (.img) and then convert it to a .raw.gz file.\n# This is purpose built so non-raw cloud image files can be used with the \"image2disk\" action.\n# See https://artifacthub.io/packages/tbaction/tinkerbell-community/image2disk.\nset -euxo pipefail\nif ! which pigz qemu-img \u0026\u003e/dev/null; then\n\tapk add --update pigz qemu-img\nfi\nimage_url=$1\nfile=$2/${image_url##*/}\nfile=${file%.*}.raw.gz\nif [[ ! -f \"$file\" ]]; then\n\twget \"$image_url\" -O image.img\n\tqemu-img convert -O raw image.img image.raw\n\tpigz \u003cimage.raw \u003e\"$file\"\n\trm -f image.img image.raw\nfi"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"download-image","namespace":"default"}}
