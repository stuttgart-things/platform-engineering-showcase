---
version: 3
includes:
  git:
    taskfile: ./taskfiles/git.yaml
  lint:
    taskfile: ./taskfiles/linting.yaml
  # shell:
  #   taskfile: ./taskfiles/dagger-shell.yaml

vars:
  DATE:
    sh: date +"%y.%m%d.%H%M"
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD); else echo main ; fi

tasks:
  run-terraform-shell:
    cmds:
      - |
        MOUNT=$(echo "{{.directory | join "\n"}}" | gum choose)
        dagger -c '
          container |
            from cgr.dev/chainguard/wolfi-base |
            with-exec apk add curl git bash wget terraform kubectl |
            with-mounted-directory "'"$MOUNT"'" "'"$MOUNT"'" |
            with-mounted-file /root/.kube/config ../../../.kube/keycloak-cluster |
            terminal
        '
    vars:
      directory:
        - keycloak

  destroy-kind-cluster:
    desc: Destroy a KinD cluster
    cmds:
      - |
        CLUSTERS=$(kind get clusters)
        if [ -z "$CLUSTERS" ]; then
          echo "No KinD clusters found."
          exit 0
        fi

        CLUSTER_NAME=$(echo "$CLUSTERS" | gum choose)
        echo "You chose: $CLUSTER_NAME"

        if gum confirm "Do you really want to delete cluster $CLUSTER_NAME?"; then
          kind delete cluster --name "$CLUSTER_NAME"
          echo "Cluster $CLUSTER_NAME deleted."
        else
          echo "Aborted."
        fi

  create-kind-cluster:
    desc: Create a new KinD cluster
    cmds:
      - |
        PROFILE=$(echo "{{.profiles | join "\n"}}" | gum choose)
        echo "You chose: $PROFILE"

        mkdir -p {{ .KUBECONFIG_PATH }} || true

        CLUSTER_NAME=$(basename "$PROFILE" .yaml)

        if kind get clusters | grep -q "^$CLUSTER_NAME$"; then
          echo "Cluster $CLUSTER_NAME already exists."
          if gum confirm "Do you want to delete and recreate it?"; then
            kind delete cluster --name "$CLUSTER_NAME"
          else
            echo "Aborting."
            exit 0
          fi
        fi

        kind create cluster \
          --name "$CLUSTER_NAME" \
          --config "$PROFILE" \
          --kubeconfig {{ .KUBECONFIG_PATH }}/"$CLUSTER_NAME"
    vars:
      profiles:
        - keycloak/keycloak-cluster.yaml
        - kargo/kargo-cluster.yaml
        - gateway-api/gateway-api-cluster.yaml
      KUBECONFIG_PATH: ~/.kube

  default:
    desc: Select a task to run
    cmds:
      - |
        # Extract task names (keep internal colons, remove only trailing colon)
        task_name=$(task -l | awk '/^\*/ {print $2}' | sed 's/:$//' | gum choose)

        # Run the selected task
        [ -n "$task_name" ] && task "$task_name"

  run-pre-commit-hook:
    deps:
      - check
    desc: "Run the pre-commit hook script to replace .example.com with .example.com"
    cmds:
      - |
        # Find all YAML files in the repository recursively, excluding Taskfile.yaml
        files=$(find . -type f \( -name "*.yaml" -o -name "*.yml" -o -name "*.yml" -o -name "*.md" \) ! -name "Taskfile.yaml")

        # Loop through each file
        for file in $files; do
          # Skip binary files
          if file "$file" | grep -q "text"; then
            # Replace the string and update the file
            sed -i 's/\.sva\.de/\.example\.com/g' "$file"
          fi
        done

        # Add all modified YAML files back to staging
        git add $(git ls-files --modified | grep -E '\.ya?ml$')

        exit 0
    silent: false
